/**
 * SCSS Mixins for reusable styles
 */

@use "./variables" as *;

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints.";
  }
}

@mixin respond-below($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint) - 1px}) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in $breakpoints.";
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// Button styles - Futuristic
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: spacing(2);
  padding: spacing(3) spacing(6);
  border: none;
  border-radius: border-radius(md);
  font-family: $font-family-sans;
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  line-height: line-height(none);
  text-decoration: none;
  cursor: pointer;
  transition: all transition(normal);
  user-select: none;
  white-space: nowrap;
  position: relative;
  overflow: hidden;

  // Glassmorphism effect
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s ease;
  }

  &:hover::before {
    left: 100%;
  }

  &:focus {
    outline: 2px solid color(primary);
    outline-offset: 2px;
    border-radius: border-radius(md);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;

    &::before {
      display: none;
    }
  }
}

@mixin button-primary {
  @include button-base;
  background: map-get($gradients, button);
  color: color(white);
  box-shadow: map-get($shadows, glow-primary);

  &:hover:not(:disabled) {
    background: map-get($gradients, button-hover);
    transform: translateY(-2px) scale(1.02);
    box-shadow: map-get($shadows, glow-primary), map-get($shadows, lg);
    animation: glowPulse 2s ease-in-out infinite;
  }

  &:active:not(:disabled) {
    background: map-get($gradients, button-hover);
    transform: translateY(0) scale(0.98);
  }
}

@mixin button-secondary {
  @include button-base;
  background: color(background-glass);
  color: color(primary);
  border: 1px solid color(primary);
  backdrop-filter: blur(10px);

  &:hover:not(:disabled) {
    background: map-get($gradients, button);
    color: color(white);
    transform: translateY(-2px) scale(1.02);
    box-shadow: map-get($shadows, glow-primary);
    border-color: transparent;
  }

  &:active:not(:disabled) {
    background: map-get($gradients, button-hover);
    transform: translateY(0) scale(0.98);
  }
}

@mixin button-outline {
  @include button-base;
  background-color: transparent;
  color: color(primary);
  border: 1px solid color(primary);

  &:hover:not(:disabled) {
    background-color: color(primary);
    color: color(white);
  }
}

// Form elements
@mixin input-base {
  width: 100%;
  padding: spacing(3) spacing(4);
  border: 1px solid color(border-light);
  border-radius: border-radius(md);
  font-family: $font-family-sans;
  font-size: font-size(sm);
  line-height: line-height(normal);
  background: color(background-glass);
  color: color(text-primary);
  transition: all transition(normal);
  backdrop-filter: blur(10px);

  &:focus {
    outline: none;
    border-color: color(primary);
    box-shadow:
      0 0 0 3px rgba(0, 212, 255, 0.2),
      map-get($shadows, glow-primary);
  }

  &:disabled {
    background: color(background-secondary);
    color: color(text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
  }

  &::placeholder {
    color: color(text-tertiary);
  }

  &.error {
    border-color: color(error);
    box-shadow:
      0 0 0 3px rgba(255, 71, 87, 0.2),
      0 0 20px rgba(255, 71, 87, 0.3);
  }
}

@mixin label-base {
  display: block;
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  color: color(text-primary);
  margin-bottom: spacing(2);
}

// Card styles - Futuristic
@mixin card-base {
  background: map-get($gradients, card);
  border-radius: border-radius(lg);
  box-shadow: map-get($shadows, glow-white);
  border: 1px solid color(border-light);
  overflow: hidden;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

@mixin card-hover {
  transition: all transition(normal);
  cursor: pointer;

  &:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: map-get($shadows, glow-primary), map-get($shadows, xl);
    border-color: color(primary);
  }
}

// Modal styles
@mixin modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(color(black), 0.5);
  z-index: z-index(overlay);
  @include flex-center;
  padding: spacing(4);
}

@mixin modal-content {
  background-color: color(white);
  border-radius: border-radius(lg);
  box-shadow: shadow(2xl);
  max-width: 500px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  animation: modal-enter 0.2s ease-out;
}

@keyframes modal-enter {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

// Loading states
@mixin loading-skeleton {
  background: linear-gradient(
    90deg,
    color(gray-200) 25%,
    color(gray-100) 50%,
    color(gray-200) 75%
  );
  background-size: 200% 100%;
  animation: loading-shimmer 1.5s infinite;
}

@keyframes loading-shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Accessibility
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid color(primary);
    outline-offset: 2px;
  }
}
