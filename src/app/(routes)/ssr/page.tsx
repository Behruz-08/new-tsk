import { Database, Calendar, RefreshCw } from 'lucide-react';

import { Navigation } from '@/components/layout/Navigation';
import { PostCard } from '@/components/posts/PostCard';
import { Card } from '@/components/ui/Card';
import { PageHeader } from '@/components/ui/PageHeader';
import { RefreshButton } from '@/components/ui/RefreshButton';
import { TechInfo } from '@/components/ui/TechInfo';
import { apiClient } from '@/lib/api/api-client';
import { formatDate } from '@/lib/utils/utils';
import type { Post } from '@/types';

import styles from './page.module.scss';

export const dynamic = 'force-dynamic';

async function getPosts(): Promise<Post[]> {
  try {
    await new Promise((resolve) => setTimeout(resolve, 500));

    const posts = await apiClient.get<Post[]>('/posts');
    return posts.slice(0, 12);
  } catch (error) {
    console.error('Error fetching posts:', error);
    return [];
  }
}

export default async function SSRPage() {
  const posts = await getPosts();
  const renderTime = new Date();

  return (
    <div className={styles.page}>
      <Navigation />

      <main className={styles.main}>
        <div className="container">
          <PageHeader
            title="SSR - Server-Side Rendering"
            description="–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ. –î–∞–Ω–Ω—ã–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ."
            icon={Database}
            badge={{
              icon: RefreshCw,
              text: '–°–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥',
            }}
          />

          <Card className={styles.renderInfo}>
            <div className={styles.renderContent}>
              <div className={styles.renderTime}>
                <Calendar size={20} />
                <div>
                  <strong>–í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:</strong>
                  <span>{formatDate(renderTime)}</span>
                </div>
              </div>
              <div className={styles.renderNote}>
                üí° –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–∞
              </div>
            </div>
          </Card>

          <div className={styles.postsSection}>
            <h2 className={styles.sectionTitle}>–ü–æ—Å—Ç—ã –∏–∑ JSONPlaceholder ({posts.length})</h2>
            <p className={styles.sectionDescription}>
              –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏ —Ç–µ–∫—É—â–µ–º –∑–∞–ø—Ä–æ—Å–µ
            </p>

            <div className={styles.postsGrid}>
              {posts.map((post) => (
                <PostCard key={post.id} post={post} showRenderTime={true} renderTime={renderTime} />
              ))}
            </div>
          </div>

          <TechInfo
            title="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è SSR"
            items={[
              { label: '–í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞', value: '–ü—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ (request time)' },
              { label: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', value: '–•–æ—Ä–æ—à–∞—è (–Ω–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ SSG)' },
              { label: 'SEO', value: '–û—Ç–ª–∏—á–Ω–æ–µ (–ø–æ–ª–Ω—ã–π HTML –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)' },
              { label: '–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ', value: '–ù–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' },
              { label: '–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö', value: '–í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ' },
              { label: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è', value: '–í–æ–∑–º–æ–∂–Ω–∞ (cookies, headers)' },
            ]}
          />

          <div className={styles.refreshSection}>
            <RefreshButton />
            <p className={styles.refreshNote}>
              –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
            </p>
          </div>
        </div>
      </main>
    </div>
  );
}
